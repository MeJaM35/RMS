# Generated by Django 4.2 on 2023-04-23 08:55

import datetime
from django.conf import settings
import django.contrib.auth.models
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('pfp', models.ImageField(blank=True, default='user-regular.svg', null=True, upload_to='pfps')),
                ('username', models.CharField(max_length=50, null=True)),
                ('email', models.EmailField(max_length=254, null=True, unique=True)),
                ('fname', models.CharField(max_length=20, null=True)),
                ('lname', models.CharField(max_length=20, null=True)),
                ('phone', models.BigIntegerField(null=True)),
                ('role', models.CharField(choices=[('admin', 'admin'), ('recruiter', 'recruiter'), ('applicant', 'applicant')], default='applicant', max_length=50)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Applicant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('about', models.TextField(blank=True, null=True)),
                ('age', models.IntegerField(null=True)),
                ('pronouns', models.CharField(max_length=10, null=True)),
                ('location', models.CharField(max_length=10, null=True)),
                ('resume', models.FileField(null=True, upload_to='resume/')),
                ('github', models.URLField(blank=True)),
                ('linkedin', models.URLField(blank=True)),
                ('User', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='applicant', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('logo', models.ImageField(blank=True, default='default.jpg', null=True, upload_to='pfps')),
                ('link', models.URLField()),
            ],
        ),
        migrations.CreateModel(
            name='Skill',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Recruiter',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.CharField(max_length=50, null=True)),
                ('meet_link', models.URLField(blank=True, null=True)),
                ('User', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='recruiters', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Organization',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, null=True)),
                ('logo', models.ImageField(blank=True, default='logo.svg', null=True, upload_to='logo')),
                ('email', models.EmailField(max_length=254, null=True, unique=True)),
                ('website', models.URLField(blank=True, null=True)),
                ('activated', models.BooleanField(default=False)),
                ('admin', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('recruiters', models.ManyToManyField(blank=True, related_name='org', to='base.recruiter')),
            ],
        ),
        migrations.CreateModel(
            name='Job',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('position', models.CharField(max_length=20, null=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('start_date', models.DateField(default=datetime.datetime(2023, 4, 23, 14, 25, 10, 140496))),
                ('pay_range', models.IntegerField()),
                ('description', models.TextField(null=True)),
                ('exp_req', models.CharField(blank=True, max_length=50, null=True)),
                ('edu_req', models.CharField(choices=[('basic', 'basic'), ('higher', 'higher'), ('graduation', 'graduation'), ('post graduation', 'post graduation'), ('doctorate', 'doctorate'), ('certifications', 'certifications')], default='graduation', max_length=50)),
                ('grade_req', models.IntegerField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('Org', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='org', to='base.organization')),
                ('Recruiter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='recruiter', to='base.recruiter')),
                ('skills_req', models.ManyToManyField(blank=True, null=True, to='base.skill')),
            ],
        ),
        migrations.CreateModel(
            name='Exp',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.CharField(max_length=20, null=True)),
                ('company', models.CharField(max_length=20, null=True)),
                ('start_date', models.DateField(null=True)),
                ('end_date', models.DateField(null=True)),
                ('skills', models.ManyToManyField(blank=True, to='base.skill')),
            ],
        ),
        migrations.CreateModel(
            name='Edu',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('degree', models.CharField(max_length=20, null=True)),
                ('level', models.CharField(choices=[('basic', 'basic'), ('higher', 'higher'), ('graduation', 'graduation'), ('post graduation', 'post graduation'), ('doctorate', 'doctorate'), ('certifications', 'certifications')], default='basic', max_length=50)),
                ('inst', models.CharField(max_length=20, null=True)),
                ('start_date', models.DateField(null=True)),
                ('end_date', models.DateField(null=True)),
                ('grade', models.DecimalField(decimal_places=2, max_digits=5, null=True)),
                ('credentials', models.URLField(blank=True)),
                ('skills', models.ManyToManyField(blank=True, to='base.skill')),
            ],
        ),
        migrations.CreateModel(
            name='Application',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('not_applied', 'not_applied'), ('applied', 'applied'), ('shortlisted', 'shortlisted'), ('interviewed', 'interviewed'), ('rejected', 'rejected'), ('accepted', 'accepted')], default='not_applied', max_length=50)),
                ('applicant', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='app', to='base.applicant')),
                ('job', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='app', to='base.job')),
            ],
        ),
        migrations.AddField(
            model_name='applicant',
            name='edu',
            field=models.ManyToManyField(blank=True, to='base.edu'),
        ),
        migrations.AddField(
            model_name='applicant',
            name='exp',
            field=models.ManyToManyField(blank=True, to='base.exp'),
        ),
        migrations.AddField(
            model_name='applicant',
            name='skills',
            field=models.ManyToManyField(blank=True, to='base.skill'),
        ),
    ]
